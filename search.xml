<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Klee likes making friends</title>
      <link href="/2023/08/24/Klee%20likes%20making%20friends/"/>
      <url>/2023/08/24/Klee%20likes%20making%20friends/</url>
      
        <content type="html"><![CDATA[<h2 id="Klee-likes-making-friends"><a href="#Klee-likes-making-friends" class="headerlink" title="Klee likes making friends"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7296">Klee likes making friends</a></h2><h3 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h3><hr><p>总共n个人，从任意m个人里选两个人，求所需的最小价值。</p><h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><hr><p>一眼看过去很像单调队列优化dp的典题，然后用单调队列做了半天，发现单调队列存储的信息太少了，做不了这个题。然后就想到了用后缀数组。<br>$dp[i][j]$表示倒数第一个朋友是$i$，倒数第二个朋友是$j$，那么很容易得出倒数第三个朋友所属的区间为$[i-m,j-1]$，拿后缀最小值数组记录一下即可。</p><h3 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxm 20010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxn 2010</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">__int128_t</span> int128;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">int</span> w[maxm],dp[maxn][maxn];   <span class="comment">//dp[i][j]表示到第i位且i,j是朋友的合法情况下的最小答案</span></span><br><span class="line"><span class="type">int</span> g[maxn][maxn];   <span class="comment">//g[i][j]表示第i位且i,j是朋友,倒数第二个朋友从i-1到j的最小值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,ans=inf;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  cin &gt;&gt; w[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;     <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)  dp[i][j]=g[i][j]=inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;--j)&#123;   <span class="comment">//倒着求后缀最小值</span></span><br><span class="line">            dp[i][j]=w[i]+w[j];</span><br><span class="line">            g[i][j]=<span class="built_in">min</span>(g[i][j+<span class="number">1</span>],dp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m+<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">-1</span>;j&gt;=i-m+<span class="number">1</span>;--j)&#123;</span><br><span class="line">            <span class="type">int</span> u=(i<span class="number">-1</span>)%m+<span class="number">1</span>,v=(j<span class="number">-1</span>)%m+<span class="number">1</span>;</span><br><span class="line">            dp[u][v]=g[v][u]+w[i];      <span class="comment">//在取模后会惊奇的发现，i和i-m是一个值，然后代码就很好看^_^</span></span><br><span class="line">            g[u][v]=<span class="built_in">min</span>(g[u][j%m+<span class="number">1</span>],dp[u][v]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=n-m+<span class="number">1</span>;j&lt;i;++j)&#123;</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,dp[(i<span class="number">-1</span>)%m+<span class="number">1</span>][(j<span class="number">-1</span>)%m+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;  cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 杭电多校 </tag>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
