<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Pa?sWorD</title>
      <link href="/2023/09/20/PasWorD/"/>
      <url>/2023/09/20/PasWorD/</url>
      
        <content type="html"><![CDATA[<h1 id="Pa-sWorD"><a href="#Pa-sWorD" class="headerlink" title="Pa?sWorD"></a><a href="https://pintia.cn/problem-sets/1703372159713652736/exam/problems/1703372337216602120?type=7&page=0">Pa?sWorD</a></h1><h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><hr><p>给定一个字符串s，其中只包含小写字母，大写字母，数字和问号$?$。可以进行一下操作：</p><ul><li>将小写字母变为相对应的大写字母或不变；</li><li>将问号$?$变为大写字母，小写字母或数字中的任意一个字符。</li></ul><p>要求满足以下条件的所有方案数的数量：</p><ul><li>字符串中至少有一个小写字母；</li><li>字符串中至少有一个大写字母；</li><li>字符串中至少有一个数字；</li><li>字符串中任意相邻字符不能相同。</li></ul><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><hr><p>先考虑简单的三维$dp[i][j][k]$，表示第$i$个字符为$j$且前$i$个字符中各种字符的存在状态为$k$的合法数量。</p><p>其中$k$为一个三位二进制数，如：</p><ul><li>100表示只存在数字；</li><li>010表示只存在大写字母；</li><li>001表示只存在小写字母。</li></ul><p>剩余状态也是类似的道理。</p><p>然后考虑状态转移，转移的过程只有一个限制条件，即相邻字符不能相同，则状态转移如下：</p><p>$$dp[i][x][k|t]&#x3D;dp[i-1][j][k],x!&#x3D;j$$</p><p>其中，当$x$分别为数字，大写字母，小写字母的时候$t$分别为$1$，$2$，$4$。</p><p>假设当前遍历到小写字母，则当它为大、小写字母的时候分别进行状态转移；假设遍历到问号，则遍历所有可以变成的字符进行转移。</p><h4 id="时间复杂度（O-n-8-8-70-）空间复杂度（O-n-8-8-70-）"><a href="#时间复杂度（O-n-8-8-70-）空间复杂度（O-n-8-8-70-）" class="headerlink" title="时间复杂度（O(n*8*8*70)）空间复杂度（O(n*8*8*70)）"></a>时间复杂度（O(n*8*8*70)）空间复杂度（O(n*8*8*70)）</h4><p>真巧，全都超限。</p><p>对于空间复杂度，仔细观察转移方程发现，第$i$项只第$i-1$项有关，故可以考虑滚动数组优化；至于时间复杂度，则可以考虑使用差分优化。</p><h1 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxn 70</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> mod 998244353</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> d[maxn][<span class="number">1</span>&lt;&lt;<span class="number">3</span>],g[maxn][<span class="number">1</span>&lt;&lt;<span class="number">3</span>],dis[<span class="number">1</span>&lt;&lt;<span class="number">3</span>][maxn];</span><br><span class="line">map&lt;<span class="type">char</span>,<span class="type">int</span>&gt;num;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="string">&#x27;a&#x27;</span>;i&lt;=<span class="string">&#x27;z&#x27;</span>;++i)  num[<span class="built_in">char</span>(i)]=++cur;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="string">&#x27;A&#x27;</span>;i&lt;=<span class="string">&#x27;Z&#x27;</span>;++i)  num[<span class="built_in">char</span>(i)]=++cur;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="string">&#x27;0&#x27;</span>;i&lt;=<span class="string">&#x27;9&#x27;</span>;++i)  num[<span class="built_in">char</span>(i)]=++cur;</span><br><span class="line">    num[<span class="string">&#x27;?&#x27;</span>]=<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> n,ans=<span class="number">0</span>;  cin &gt;&gt; n;</span><br><span class="line">    string s;  cin &gt;&gt; s;</span><br><span class="line">    s=<span class="string">&quot; &quot;</span>+s;</span><br><span class="line">    d[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="built_in">memcpy</span>(g,d,<span class="built_in">sizeof</span>(d));</span><br><span class="line">        <span class="built_in">memset</span>(dis,<span class="number">0</span>,<span class="built_in">sizeof</span>(dis));</span><br><span class="line">        <span class="built_in">memset</span>(d,<span class="number">0</span>,<span class="built_in">sizeof</span>(d));</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">62</span>;++j)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> state=<span class="number">0</span>;state&lt;<span class="number">8</span>;++state)&#123;</span><br><span class="line">                <span class="keyword">if</span>(!g[j][state]||num[s[i]]==j&amp;&amp;num[s[i]]&gt;=<span class="number">27</span>)  <span class="keyword">continue</span>;</span><br><span class="line">                <span class="type">int</span> tmp=g[j][state];</span><br><span class="line">                <span class="keyword">if</span>(s[i]==<span class="string">&#x27;?&#x27;</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> sta=state|<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;=<span class="number">1</span>&amp;&amp;j&lt;=<span class="number">26</span>)  dis[sta][<span class="number">1</span>]=(dis[sta][<span class="number">1</span>]+tmp)%mod,dis[sta][j]=(dis[sta][j]-tmp)%mod,dis[sta][j+<span class="number">1</span>]=(dis[sta][j+<span class="number">1</span>]+tmp)%mod,dis[sta][<span class="number">27</span>]=(dis[sta][<span class="number">27</span>]-tmp)%mod;</span><br><span class="line">                    <span class="keyword">else</span>  dis[sta][<span class="number">1</span>]=(dis[sta][<span class="number">1</span>]+tmp)%mod,dis[sta][<span class="number">27</span>]=(dis[sta][<span class="number">27</span>]-tmp)%mod;</span><br><span class="line">                    sta=state|<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;=<span class="number">27</span>&amp;&amp;j&lt;=<span class="number">52</span>)  dis[sta][<span class="number">27</span>]=(dis[sta][<span class="number">27</span>]+tmp)%mod,dis[sta][j]=(dis[sta][j]-tmp)%mod,dis[sta][j+<span class="number">1</span>]=(dis[sta][j+<span class="number">1</span>]+tmp)%mod,dis[sta][<span class="number">53</span>]=(dis[sta][<span class="number">53</span>]-tmp)%mod;</span><br><span class="line">                    <span class="keyword">else</span>  dis[sta][<span class="number">27</span>]=(dis[sta][<span class="number">27</span>]+tmp)%mod,dis[sta][<span class="number">53</span>]=(dis[sta][<span class="number">53</span>]-tmp)%mod;</span><br><span class="line">                    sta=state|<span class="number">4</span>;</span><br><span class="line">                    <span class="keyword">if</span>(j&gt;=<span class="number">53</span>&amp;&amp;j&lt;=<span class="number">62</span>)  dis[sta][<span class="number">53</span>]=(dis[sta][<span class="number">53</span>]+tmp)%mod,dis[sta][j]=(dis[sta][j]-tmp)%mod,dis[sta][j+<span class="number">1</span>]=(dis[sta][j+<span class="number">1</span>]+tmp)%mod,dis[sta][<span class="number">63</span>]=(dis[sta][<span class="number">63</span>]-tmp)%mod;</span><br><span class="line">                    <span class="keyword">else</span>  dis[sta][<span class="number">53</span>]=(dis[sta][<span class="number">53</span>]+tmp)%mod,dis[sta][<span class="number">63</span>]=(dis[sta][<span class="number">63</span>]-tmp)%mod;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(num[s[i]]&lt;=<span class="number">26</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> cur=num[s[i]],sta=state|<span class="number">1</span>;</span><br><span class="line">                    <span class="keyword">if</span>(cur!=j)  d[cur][sta]=(d[cur][sta]+tmp)%mod;</span><br><span class="line">                    cur=num[s[i]]+<span class="number">26</span>,sta=state|<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">if</span>(cur!=j)  d[cur][sta]=(d[cur][sta]+tmp)%mod;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(num[s[i]]&lt;=<span class="number">62</span>&amp;&amp;num[s[i]]&gt;=<span class="number">27</span>)&#123;</span><br><span class="line">                    <span class="type">int</span> cur=num[s[i]],sta;</span><br><span class="line">                    <span class="keyword">if</span>(cur&gt;=<span class="number">27</span>&amp;&amp;cur&lt;=<span class="number">52</span>)  sta=state|<span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(cur&gt;=<span class="number">53</span>&amp;&amp;cur&lt;=<span class="number">62</span>)  sta=state|<span class="number">4</span>;</span><br><span class="line">                    d[cur][sta]=(d[cur][sta]+tmp)%mod;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> state=<span class="number">0</span>;state&lt;<span class="number">8</span>;++state)&#123;</span><br><span class="line">            <span class="type">int</span> cur=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;=<span class="number">62</span>;++j)&#123;</span><br><span class="line">                cur=(cur+dis[state][j])%mod;</span><br><span class="line">                d[j][state]=(d[j][state]+cur)%mod;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">65</span>;++i)  ans=(ans+d[i][<span class="number">7</span>])%mod;</span><br><span class="line">    cout &lt;&lt; (ans%mod+mod)%mod &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>); cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">fopen</span>(<span class="string">&quot;in.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)) &#123;</span><br><span class="line">        <span class="built_in">freopen</span>(<span class="string">&quot;in.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, stdin);</span><br><span class="line">        <span class="built_in">freopen</span>(<span class="string">&quot;out.txt&quot;</span>, <span class="string">&quot;w&quot;</span>, stdout);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="type">int</span> t=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(t--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2023ICPC网络预选赛 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Klee likes making friends</title>
      <link href="/2023/08/24/Klee%20likes%20making%20friends/"/>
      <url>/2023/08/24/Klee%20likes%20making%20friends/</url>
      
        <content type="html"><![CDATA[<h1 id="Klee-likes-making-friends"><a href="#Klee-likes-making-friends" class="headerlink" title="Klee likes making friends"></a><a href="http://acm.hdu.edu.cn/showproblem.php?pid=7296">Klee likes making friends</a></h1><h1 id="题目大意"><a href="#题目大意" class="headerlink" title="题目大意"></a>题目大意</h1><hr><p>总共n个人，从任意m个人里选两个人，求所需的最小价值。</p><h1 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h1><hr><p>一眼看过去很像单调队列优化dp的典题，然后用单调队列做了半天，发现单调队列存储的信息太少了，做不了这个题。然后就想到了用后缀数组。<br>$dp[i][j]$表示倒数第一个朋友是$i$，倒数第二个朋友是$j$，那么很容易得出倒数第三个朋友所属的区间为$[i-m,j-1]$，拿后缀最小值数组记录一下即可。</p><h1 id="参考代码"><a href="#参考代码" class="headerlink" title="参考代码"></a>参考代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxm 20010</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> maxn 2010</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">__int128_t</span> int128;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> inf=<span class="number">1e9</span>;</span><br><span class="line"><span class="type">int</span> w[maxm],dp[maxn][maxn];   <span class="comment">//dp[i][j]表示到第i位且i,j是朋友的合法情况下的最小答案</span></span><br><span class="line"><span class="type">int</span> g[maxn][maxn];   <span class="comment">//g[i][j]表示第i位且i,j是朋友,倒数第二个朋友从i-1到j的最小值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m,ans=inf;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=n;++i)  cin &gt;&gt; w[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;     <span class="comment">//初始化</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;=m;j++)  dp[i][j]=g[i][j]=inf;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;--j)&#123;   <span class="comment">//倒着求后缀最小值</span></span><br><span class="line">            dp[i][j]=w[i]+w[j];</span><br><span class="line">            g[i][j]=<span class="built_in">min</span>(g[i][j+<span class="number">1</span>],dp[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=m+<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=i<span class="number">-1</span>;j&gt;=i-m+<span class="number">1</span>;--j)&#123;</span><br><span class="line">            <span class="type">int</span> u=(i<span class="number">-1</span>)%m+<span class="number">1</span>,v=(j<span class="number">-1</span>)%m+<span class="number">1</span>;</span><br><span class="line">            dp[u][v]=g[v][u]+w[i];      <span class="comment">//在取模后会惊奇的发现，i和i-m是一个值，然后代码就很好看^_^</span></span><br><span class="line">            g[u][v]=<span class="built_in">min</span>(g[u][j%m+<span class="number">1</span>],dp[u][v]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;++i)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=n-m+<span class="number">1</span>;j&lt;i;++j)&#123;</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,dp[(i<span class="number">-1</span>)%m+<span class="number">1</span>][(j<span class="number">-1</span>)%m+<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin.<span class="built_in">tie</span>(<span class="number">0</span>);cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> t;  cin &gt;&gt; t;</span><br><span class="line">    <span class="keyword">while</span>(t--)&#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 2023杭电多校 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
